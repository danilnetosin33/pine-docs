"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegularMenu = void 0;
var generic_menu_1 = require("../generic-menu");
var RegularMenu = (function (_super) {
    __extends(RegularMenu, _super);
    function RegularMenu(config) {
        var _this = _super.call(this, config) || this;
        _this.config = config;
        return _this;
    }
    RegularMenu.prototype.stateToMenu = function () {
        return [];
    };
    RegularMenu.prototype.menuToState = function (menu) {
        return menu[0];
    };
    RegularMenu.prototype.onActiveButton = function (ctx, activeButton) {
        this.updateState(activeButton.value);
    };
    RegularMenu.prototype.formatButtonLabel = function (ctx, button) {
        var label = _super.prototype.getButtonLabelInfo.call(this, ctx, button).label;
        return label;
    };
    return RegularMenu;
}(generic_menu_1.GenericMenu));
exports.RegularMenu = RegularMenu;
//# sourceMappingURL=regular.menu.js.map